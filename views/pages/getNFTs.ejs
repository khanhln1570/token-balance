<!DOCTYPE html>
<html lang="en">

<head>
  <%- include('../partials/head'); %>
</head>

<body class="container">

  <header>
    <%- include('../partials/header'); %>
      <link rel="stylesheet" href="/style.css">
      <script src="https://cdn.jsdelivr.net/npm/@walletconnect/web3-provider@1.7.1/dist/umd/index.min.js"></script>
      <script src="https://cdn.jsdelivr.net/npm/web3@latest/dist/web3.min.js"></script>
  </header>

  <main>
    <div class="jumbotron">
      <h1>Find NFTs by Wallet Address</h1>
      <form method="get" action="/nft/getNFTs">
        <div class="form-row">
          <div class="col-md-12 mb-3">
            <div class="input-group">
              <div class="custom-file" style="margin-right: 10px;">
                <input class='form-control' id="walletAddress" type="text" name="walletAddress"
                  placeholder="Wallet address..." value="<%=address ? address : ''%>" required>
              </div>
              <div class="input-group-append">
               <img class="wallet-icon btn-outline-secondary" style="margin-right: 10px;" onclick="connectWC()" id="connect-button" width="40" src="https://forum.zeroqode.com/uploads/default/original/2X/4/401498d7adfbb383fea695394f4f653ea4e7c9a7.png">
               <img class="wallet-icon btn-outline-secondary" style="margin-right: 10px;" onclick="connectWC()" id="connect-button" width="40" src="https://seeklogo.com/images/W/walletconnect-logo-EE83B50C97-seeklogo.com.png">
              </div>
            </div>
          </div>
          <div class="col-md-12 mb-3">
            <input class='col-md-12 mb-3 btn btn-info' type="submit" value="Find" onclick="disconnect()">
          </div>
        </div>
      </form>
      <%if(images) { %>
        <ul>
          <% images.forEach(function(image) { %>
            <li>
              <img class="nft lazy-image"
                src="https://i.pinimg.com/originals/3f/2c/97/3f2c979b214d06e9caab8ba8326864f3.gif"
                data-src=<%=image.media[0].gateway %> width=250 height=250
              data-toggle="modal"
              data-target="#modal-select-image"
              data-link="<%=image.media[0].gateway%>"
                data-title="<%=image.title%>"
                  data-tokenid="<%=image.id.tokenId%> ">
            </li>
            <% }); %>
        </ul>
        <% } %>
          <%if(message) { %>
            <h2>
              <%=message %>
            </h2>
            <% } %>
    </div>
  </main>
  <script>
    /** connect wallet */
    let account;

    // https://docs.walletconnect.com/quick-start/dapps/web3-provider
    let provider = new WalletConnectProvider.default({
      rpc: {
        1: "https://cloudflare-eth.com/", // https://ethereumnodes.com/
        137: "https://polygon-rpc.com/", // https://docs.polygon.technology/docs/develop/network-details/network/
        // ...
      },
      bridge: "https://bridge.walletconnect.org",
    });

    async function connectWC() {
      window.mobileCheck = function () {
        let check = false;
        (function (a) {
          if (
            /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(
              a
            ) ||
            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(
              a.substr(0, 4)
            )
          )
            check = true;
        })(navigator.userAgent || navigator.vendor || window.opera);
        return check;
      };
      if (window.mobileCheck()) {
        try {
          await provider.enable();

          //  Create Web3 instance
          const web3 = new Web3(provider);
          window.w3 = web3;

          var accounts = await web3.eth.getAccounts(); // get all connected accounts
          account = accounts[0]; // get the primary account
          document.getElementById("walletAddress").value = account;
        } catch (error) {
          console.warn(error);
          location.reload();
        }
      } else {

        ethereum.request({ method: "eth_requestAccounts" }).then((accounts) => {
          account = accounts[0];
          if (account) {
            console.log(account);
            document.getElementById("walletAddress").value = account;
          } else {
            alert("Fail");
          }
          // ethereum
          //   .request({ method: "eth_getBalance", params: [account, "latest"] })
          //   .then((result) => {
          //     console.log(result);
          //   });
        }).catch((err) => {
          console.log(err.message);
        });
      }
    };
    const sign = async (msg) => {
      if (w3) {
        return await w3.eth.personal.sign(msg, account);
      } else {
        return false;
      }
    };

    const contract = async (abi, address) => {
      if (w3) {
        return new w3.eth.Contract(abi, address);
      } else {
        return false;
      }
    };

    const disconnect = async () => {
      // Close provider session
      await provider.disconnect();
    };

  </script>
  <footer>
    <%- include('../partials/footer'); %>
  </footer>

</body>

</html>