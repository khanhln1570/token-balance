<!DOCTYPE html>
<html lang="en">

<head>
  <%- include('../partials/head'); %>
</head>

<body class="container">

  <header>
    <%- include('../partials/header'); %>
    <link rel="stylesheet" href="/style.css">
    <script src="https://cdn.jsdelivr.net/npm/@walletconnect/web3-provider@1.7.1/dist/umd/index.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/web3@latest/dist/web3.min.js"></script>
  </header>
  <button onclick="connectWC()">Connect Wallet Connect</button>

  <script type="text/javascript">
    var account;

    // https://docs.walletconnect.com/quick-start/dapps/web3-provider
    var provider = new WalletConnectProvider.default({
      rpc: {
        1: "https://cloudflare-eth.com/", // https://ethereumnodes.com/
        137: "https://polygon-rpc.com/", // https://docs.polygon.technology/docs/develop/network-details/network/
        // ...

      },
      // bridge: 'https://bridge.walletconnect.org',
    });

    var connectWC = async () => {
      await provider.enable();

      //  Create Web3 instance
      const web3 = new Web3(provider);
      window.w3 = web3

      var accounts  = await web3.eth.getAccounts(); // get all connected accounts
      account = accounts[0]; // get the primary account
    }


    var sign = async (msg) => {
      if (w3) {
        return await w3.eth.personal.sign(msg, account)
      } else {
        return false
      }
    }

    var contract = async (abi, address) => {
      if (w3) {
        return new w3.eth.Contract(abi, address)
      } else {
        return false
      }
    }

    var disconnect = async () => {
      // Close provider session
      await provider.disconnect()
    }


    var address = "0x4b4f8ca8fb3e66b5ddafcebfe86312cec486dae1"
    var abi = [{"inputs":[],"name":"count","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"increment","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}]


  </script>
  <main>
    <div class="jumbotron">
      <h1>Find NFTs By Wallet</h1>
      <form method="get" action="/nft/getNFTs">
        <div class="form-row">
          <div class="col-md-12 mb-3">
            <label>Find a NFTs By Wallet<span class="asterisk">*</span></label>
            <input class='form-control' id="walletAddress" type="text" name="walletAddress"
              placeholder="Wallet address..." value="<%=address ? address : ''%>" required>
          </div>
          <div class="col-md-12 mb-3">
            <input class='col-md-12 mb-3 btn btn-info' type="submit" value="Find">
            <button id="connect-button" class="btn btn-outline-secondary"><i class="fa-solid fa-wallet"></i></button>
          </div>
        </div>
      </form>

      <%if(images) { %>
        <ul>
          <% images.forEach(function(image) { %>
            <li>
              <img class="nft" src=<%=image %> width=250 height=250 onclick="callZekeke(`<%= image %>`)"
                data-toggle="modal"
                data-target=".bd-example-modal-sm">
            </li>
            <% }); %>
        </ul>
        <% } %>
          <%if(message) { %>
            <h2>
              <%=message %>
            </h2>
            <% } %>
    </div>

  </main>
  <script>
    document.getElementById("connect-button").addEventListener('click', event => {
      let account;
      ethereum.request({ method: 'eth_requestAccounts' }).then(accounts => {
        account = accounts[0];
        if (account) {
          console.log(account);
          document.getElementById("walletAddress").value = account;
        } else {
          alert("Fail")
        }
        ethereum.request({ method: 'eth_getBalance', params: [account, 'latest'] }).then(result => {
          console.log(result);
        });
      });


    });
  </script>
  <footer>
    <%- include('../partials/footer'); %>
  </footer>
</body>

</html>